Firmware OTA
================

芯片上电后，从BOOT ROM启动，跳转到Flash的Second Bootloader(SBL)执行，SBL检查Flash最后一个区域OTA SETTINGS的内容，决定是否需要进行OTA固件升级。

如果不需要升级，则跳转到应用执行。如果需要升级，则初始化BLE协议栈，加载FOTA Service，开启广播，等待建立连接，更新固件。



使用
---------

#. 进入OTA状态


    - 应用根据需求通过调用 ``request_ota_reboot()`` 函数进入OTA状态。

    - 该函数首先在Flash OTA SETTINGS区域写入OTA请求信息，然后复位重启，开始广播，请求建立连接执行OTA。


#. 手机连接，升级固件

    - 在确认芯片进入OTA状态后，手机打开系统蓝牙，打开BLE_FOTA应用，点击Refresh按键扫描广播设备，点击需要OTA的设备建立连接。

    - 连接建立，服务发现成功后，可以选择新的固件镜像，若需验证固件签名，要同时选择签名文件，然后Start FOTA。升级完成后，看到status = 0，意味升级成功。


单、双区OTA
-------------

根据 :ref:`memory` 一节的介绍，用户应用位于SECOND BOOTLOADER之后和PERSISTENT DATA之前的空间里，这部分空间在250KB左右。

若应用较小，此空间可以容纳两个固件，那么OTA时，可以将此空间一分为二，老固件在前一半，新固件存放到后一半。新固件传输、校验完成后，系统会将老固件擦除，把新固件搬移到老固件的地址上。若升级过程中突然失败，可以选择重启后从老固件启动，也可以选择重启后维持OTA状态，等待更新。

若应用较大，此空间无法容纳两个固件，那么OTA时，会先将老固件擦除，新固件直接写入老固件地址上。若升级过程中突然失败，则只能重启后维持OTA状态，等待更新。

在手机应用源码中，常量FOTA_IMAGE_ADDR为新固件存放地址。在SBL源码中，宏APP_IMAGE_BASE（通常不可更改）为应用代码基址。通过修改FOTA_IMAGE_ADDR可以选择单区或双区OTA。若FOTA_IMAGE_ADDR==APP_IMAGE_BASE，则执行单区OTA，否则执行双区OTA。在双区OTA时，FOTA_IMAGE_ADDR所指示的地址，必须是Flash空白区域，且大小能容纳该固件，否则会损坏老固件或持久存储区的数据。


固件签名
-------------

对用于升级的固件有安全性要求的场景下，可以使用固件签名。启用固件签名功能后，SBL会检查签名是否合法，如果不合法，则拒绝升级，以此保障新固件的来源可靠。

固件签名采用ECDSA算法。

#. 利用 ``tools/signing/key_gen.py`` 生成一对密钥，包含公钥、私钥。

#. SBL中，定义宏 ``FW_ECC_VERIFY`` 为1，并公钥拷贝到 ``sbl/pub_key.c`` 文件中，编译生成带有验证签名功能的SBL。

#. 新固件生成后，利用 ``tools/signing/signing.py`` 生成固件签名文件。手机OTA升级时，除了选择固件文件之外，还要选择此签名文件。
